//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.04.29 at 06:51:07 PM WEST 
//

package pt.jma.orchestration.context.config;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import pt.jma.orchestration.context.PropertyType;
import pt.jma.orchestration.result.config.ResultType;
import pt.jma.orchestration.util.IConfigProperties;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlRootElement(name = "context", namespace = "urn:pt.jma.orchestration.context")
@XmlType(propOrder = { "properties", "convertersConfig", "adaptersConfig", "services",
		"results" })
public class ContextType  implements IConfigProperties , Serializable  {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1159863713789335662L;
	@XmlAttribute
	protected String parent;

	public String getParent() {
		return parent;
	}

	public void setParent(String parent) {
		this.parent = parent;
	}

	@XmlElementWrapper(name = "properties", namespace = "urn:pt.jma.orchestration.context")
	@XmlElement(name = "property", type = PropertyType.class, namespace = "urn:pt.jma.orchestration.context")
	protected List<PropertyType> properties;

	public List<PropertyType> getProperties() {
		if (properties == null) {
			properties = new ArrayList<PropertyType>();
		}
		return this.properties;
	}

	@XmlElementWrapper(name = "convertersConfig", namespace = "urn:pt.jma.orchestration.context")
	@XmlElement(name = "converter", type = ConverterType.class, namespace = "urn:pt.jma.orchestration.context")
	protected List<ConverterType> convertersConfig;

	public List<ConverterType> getConvertersConfig() {
		if (convertersConfig == null) {
			convertersConfig = new ArrayList<ConverterType>();
		}
		return this.convertersConfig;
	}

	@XmlElementWrapper(name = "adaptersConfig", namespace = "urn:pt.jma.orchestration.context")
	@XmlElement(name = "adapterConfig", type = AdapterConfigType.class, required = true, namespace = "urn:pt.jma.orchestration.context")
	protected List<AdapterConfigType> adaptersConfig;

	public List<AdapterConfigType> getAdaptersConfig() {
		if (adaptersConfig == null) {
			adaptersConfig = new ArrayList<AdapterConfigType>();
		}
		return this.adaptersConfig;
	}

	@XmlElementWrapper(name = "services", namespace = "urn:pt.jma.orchestration.context")
	@XmlElement(name = "service", type = ServiceType.class, required = true, namespace = "urn:pt.jma.orchestration.context")
	protected List<ServiceType> services;

	public List<ServiceType> getServices() {
		if (services == null) {
			services = new ArrayList<ServiceType>();
		}
		return this.services;
	}

	@XmlElementWrapper(name = "results", namespace = "urn:pt.jma.orchestration.context")
	@XmlElement(name = "result", type = ResultType.class, required = true, namespace = "urn:pt.jma.orchestration.context")
	protected List<ResultType> results;

	public List<ResultType> getResults() {
		if (results == null) {
			results = new ArrayList<ResultType>();
		}
		return this.results;
	}

}
